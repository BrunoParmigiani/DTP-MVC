// <auto-generated />
using System;
using DTP.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DTP.Migrations
{
    [DbContext(typeof(DTPContext))]
    [Migration("20231215192331_TablesForRDMs")]
    partial class TablesForRDMs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DTP.Models.DTPs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Analyst")
                        .HasColumnType("longtext");

                    b.Property<string>("DM")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Demandant")
                        .HasColumnType("longtext");

                    b.Property<string>("Leader")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("DTPs");
                });

            modelBuilder.Entity("DTP.Models.RDM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Environment")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OpenDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ParentRDMId")
                        .HasColumnType("int");

                    b.Property<string>("Requester")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RequiredTo")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("System")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ticket")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<bool>("Unavailable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ParentRDMId");

                    b.ToTable("RDM");

                    b.HasDiscriminator<string>("Discriminator").HasValue("RDM");
                });

            modelBuilder.Entity("DTP.Models.Sites", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("DTP.Models.ChildrenRDM", b =>
                {
                    b.HasBaseType("DTP.Models.RDM");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasIndex("ParentId");

                    b.HasDiscriminator().HasValue("ChildrenRDM");
                });

            modelBuilder.Entity("DTP.Models.ParentRDM", b =>
                {
                    b.HasBaseType("DTP.Models.RDM");

                    b.HasDiscriminator().HasValue("ParentRDM");
                });

            modelBuilder.Entity("DTP.Models.RDM", b =>
                {
                    b.HasOne("DTP.Models.ParentRDM", null)
                        .WithMany("Children")
                        .HasForeignKey("ParentRDMId");
                });

            modelBuilder.Entity("DTP.Models.ChildrenRDM", b =>
                {
                    b.HasOne("DTP.Models.ParentRDM", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("DTP.Models.ParentRDM", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
